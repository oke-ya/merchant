diff --git a/proj.android-studio/app/AndroidManifest.xml b/proj.android-studio/app/AndroidManifest.xml
index 241b358..a924986 100644
--- a/proj.android-studio/app/AndroidManifest.xml
+++ b/proj.android-studio/app/AndroidManifest.xml
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="utf-8"?>
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
-    package="merchant.oke-ya.com"
+    package="merchant.oke_ya.com"
     android:installLocation="auto">
 
     <uses-feature android:glEsVersion="0x00020000" />
diff --git a/proj.android-studio/app/build.gradle b/proj.android-studio/app/build.gradle
index 76d0fd9..db6977e 100644
--- a/proj.android-studio/app/build.gradle
+++ b/proj.android-studio/app/build.gradle
@@ -5,7 +5,7 @@ android {
     buildToolsVersion "22.0.1"
 
     defaultConfig {
-        applicationId "merchant.oke-ya.com"
+        applicationId "merchant.oke_ya.com"
         minSdkVersion 10
         targetSdkVersion 22
         versionCode 1
diff --git a/proj.android-studio/app/build.xml b/proj.android-studio/app/build.xml
new file mode 100644
index 0000000..bebc96f
--- /dev/null
+++ b/proj.android-studio/app/build.xml
@@ -0,0 +1,92 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project name="AppActivity" default="help">
+
+    <!-- The local.properties file is created and updated by the 'android' tool.
+         It contains the path to the SDK. It should *NOT* be checked into
+         Version Control Systems. -->
+    <property file="local.properties" />
+
+    <!-- The ant.properties file can be created by you. It is only edited by the
+         'android' tool to add properties to it.
+         This is the place to change some Ant specific build properties.
+         Here are some properties you may want to change/update:
+
+         source.dir
+             The name of the source directory. Default is 'src'.
+         out.dir
+             The name of the output directory. Default is 'bin'.
+
+         For other overridable properties, look at the beginning of the rules
+         files in the SDK, at tools/ant/build.xml
+
+         Properties related to the SDK location or the project target should
+         be updated using the 'android' tool with the 'update' action.
+
+         This file is an integral part of the build system for your
+         application and should be checked into Version Control Systems.
+
+         -->
+    <property file="ant.properties" />
+
+    <!-- if sdk.dir was not set from one of the property file, then
+         get it from the ANDROID_HOME env var.
+         This must be done before we load project.properties since
+         the proguard config can use sdk.dir -->
+    <property environment="env" />
+    <condition property="sdk.dir" value="${env.ANDROID_HOME}">
+        <isset property="env.ANDROID_HOME" />
+    </condition>
+
+    <!-- The project.properties file is created and updated by the 'android'
+         tool, as well as ADT.
+
+         This contains project specific properties such as project target, and library
+         dependencies. Lower level build properties are stored in ant.properties
+         (or in .classpath for Eclipse projects).
+
+         This file is an integral part of the build system for your
+         application and should be checked into Version Control Systems. -->
+    <loadproperties srcFile="project.properties" />
+
+    <!-- quick check on sdk.dir -->
+    <fail
+            message="sdk.dir is missing. Make sure to generate local.properties using 'android update project' or to inject it through the ANDROID_HOME environment variable."
+            unless="sdk.dir"
+    />
+
+    <!--
+        Import per project custom build rules if present at the root of the project.
+        This is the place to put custom intermediary targets such as:
+            -pre-build
+            -pre-compile
+            -post-compile (This is typically used for code obfuscation.
+                           Compiled code location: ${out.classes.absolute.dir}
+                           If this is not done in place, override ${out.dex.input.absolute.dir})
+            -post-package
+            -post-build
+            -pre-clean
+    -->
+    <import file="custom_rules.xml" optional="true" />
+
+    <!-- Import the actual build file.
+
+         To customize existing targets, there are two options:
+         - Customize only one target:
+             - copy/paste the target into this file, *before* the
+               <import> task.
+             - customize it to your needs.
+         - Customize the whole content of build.xml
+             - copy/paste the content of the rules files (minus the top node)
+               into this file, replacing the <import> task.
+             - customize to your needs.
+
+         ***********************
+         ****** IMPORTANT ******
+         ***********************
+         In all cases you must update the value of version-tag below to read 'custom' instead of an integer,
+         in order to avoid having your file be overridden by tools such as "android update project"
+    -->
+    <!-- version-tag: 1 -->
+    <import file="${sdk.dir}/tools/ant/build.xml" />
+
+</project>
diff --git a/proj.android-studio/app/jni/Android.mk b/proj.android-studio/app/jni/Android.mk
index 9cded81..f8e6bd2 100644
--- a/proj.android-studio/app/jni/Android.mk
+++ b/proj.android-studio/app/jni/Android.mk
@@ -5,29 +5,45 @@ include $(CLEAR_VARS)
 $(call import-add-path,$(LOCAL_PATH)/../../../cocos2d)
 $(call import-add-path,$(LOCAL_PATH)/../../../cocos2d/external)
 $(call import-add-path,$(LOCAL_PATH)/../../../cocos2d/cocos)
+$(call import-add-path,$(LOCAL_PATH)/../../../Vendor)
 
 LOCAL_MODULE := cocos2dcpp_shared
-
 LOCAL_MODULE_FILENAME := libcocos2dcpp
 
-LOCAL_SRC_FILES := hellocpp/main.cpp -                   ../../../Classes/AppDelegate.cpp -                   ../../../Classes/HelloWorldScene.cpp
+CPP_FILES := $(shell find $(LOCAL_PATH)/../../../Classes -name *.cpp | grep -v "\#")
+#CPP_FILES += $(shell find $(LOCAL_PATH)/../../../Vendor/C2DXChartboost/C2DXChartboost/android -name *.cpp)
+
+LOCAL_SRC_FILES := hellocpp/main.cpp
+LOCAL_SRC_FILES += $(CPP_FILES:$(LOCAL_PATH)/%=%)
 
 LOCAL_C_INCLUDES := $(LOCAL_PATH)/../../../Classes
+LOCAL_C_INCLUDES += $(LOCAL_PATH)/../../../Classes/Common
+LOCAL_C_INCLUDES += $(LOCAL_PATH)/../../../Classes/scheme
+LOCAL_C_INCLUDES += $(LOCAL_PATH)/../../../cocos2d/cocos/ui
+LOCAL_C_INCLUDES += $(LOCAL_PATH)/../../../Vendor/lib
+LOCAL_C_INCLUDES += $(LOCAL_PATH)/../../../Vendor/C2DXChartboost/C2DXChartboost
+LOCAL_C_INCLUDES += $(LOCAL_PATH)/../../../Vendor/PluginXProtocols/include
+LOCAL_C_INCLUDES += $(LOCAL_PATH)/../../../Vendor/openssl-android/include
+LOCAL_C_INCLUDES += $(LOCAL_PATH)/../../../cocos2d/external/curl/include/android
+
 
 # _COCOS_HEADER_ANDROID_BEGIN
 # _COCOS_HEADER_ANDROID_END
 
 
 LOCAL_STATIC_LIBRARIES := cocos2dx_static
+LOCAL_WHOLE_STATIC_LIBRARIES := PluginProtocolStatic
 
 # _COCOS_LIB_ANDROID_BEGIN
 # _COCOS_LIB_ANDROID_END
 
 include $(BUILD_SHARED_LIBRARY)
 
-$(call import-module,.)
+$(call import-module,PluginXProtocols/proj.android/jni)
+$(call import-module,openssl-android)
+$(call import-module,curl/prebuilt/android)
+$(call import-module,cocos)
+
 
 # _COCOS_LIB_IMPORT_ANDROID_BEGIN
 # _COCOS_LIB_IMPORT_ANDROID_END
diff --git a/proj.android-studio/app/jni/Application.mk b/proj.android-studio/app/jni/Application.mk
index 07aa592..07fb26d 100644
--- a/proj.android-studio/app/jni/Application.mk
+++ b/proj.android-studio/app/jni/Application.mk
@@ -1,6 +1,7 @@
+NDK_TOOLCHAIN_VERSION=clang
 APP_STL := gnustl_static
 
-APP_CPPFLAGS := -frtti -DCC_ENABLE_CHIPMUNK_INTEGRATION=1 -std=c++11 -fsigned-char
+APP_CPPFLAGS := -frtti -DCC_ENABLE_CHIPMUNK_INTEGRATION=1 -std=c++14 -fsigned-char -DCC_USE_PHYSICS=1
 APP_LDFLAGS := -latomic
 
 
diff --git a/proj.android-studio/app/jni/hellocpp/main.cpp b/proj.android-studio/app/jni/hellocpp/main.cpp
index 2c27096..557557f 100644
--- a/proj.android-studio/app/jni/hellocpp/main.cpp
+++ b/proj.android-studio/app/jni/hellocpp/main.cpp
@@ -3,6 +3,7 @@
 #include "platform/android/jni/JniHelper.h"
 #include <jni.h>
 #include <android/log.h>
+#include "PluginJniHelper.h"
 
 #define  LOG_TAG    "main"
 #define  LOGD(...)  __android_log_print(ANDROID_LOG_DEBUG,LOG_TAG,__VA_ARGS__)
@@ -12,4 +13,7 @@ using namespace cocos2d;
 void cocos_android_app_init (JNIEnv* env) {
     LOGD("cocos_android_app_init");
     AppDelegate *pAppDelegate = new AppDelegate();
+    JavaVM* vm;
+    env->GetJavaVM(&vm);
+    PluginJniHelper::setJavaVM(vm);
 }
diff --git a/proj.android-studio/app/local.properties b/proj.android-studio/app/local.properties
new file mode 100644
index 0000000..12a0114
--- /dev/null
+++ b/proj.android-studio/app/local.properties
@@ -0,0 +1,10 @@
+# This file is automatically generated by Android Tools.
+# Do not modify this file -- YOUR CHANGES WILL BE ERASED!
+#
+# This file must *NOT* be checked into Version Control Systems,
+# as it contains information specific to your local configuration.
+
+# location of the SDK. This is only used by Ant
+# For customization when using a Version Control System, please read the
+# header note.
+sdk.dir=/opt/android-sdk
diff --git a/proj.android-studio/app/proguard-project.txt b/proj.android-studio/app/proguard-project.txt
new file mode 100644
index 0000000..b429c50
--- /dev/null
+++ b/proj.android-studio/app/proguard-project.txt
@@ -0,0 +1,94 @@
+-dontwarn okio.**
+-optimizationpasses 5
+-dontusemixedcaseclassnames
+-dontskipnonpubliclibraryclasses 
+-dontpreverify
+-verbose
+-optimizations !code/simplification/arithmetic,!field/*,!class/merging/* 
+
+-keep public class * extends android.app.Activity
+-keep public class * extends android.app.Application
+-keep public class * extends android.app.Service
+-keep public class * extends android.content.BroadcastReceiver
+-keep public class * extends android.content.ContentProvider
+-keep public class * extends android.app.backup.BackupAgentHelper
+-keep public class * extends android.preference.Preference
+-keep public class com.android.vending.licensing.ILicensingService
+
+-keepclasseswithmembernames class * {
+    native <methods>;
+}
+
+-keepclasseswithmembers class * {
+    public <init>(android.content.Context, android.util.AttributeSet);
+}
+
+-keepclasseswithmembers class * {
+    public <init>(android.content.Context, android.util.AttributeSet, int);
+}
+
+-keepclassmembers class * extends android.app.Activity {
+   public void *(android.view.View);
+}
+
+-keepclassmembers enum * {
+    public static **[] values();
+    public static ** valueOf(java.lang.String);
+}
+
+# COCOS2D-X
+
+-keepclasseswithmembers public class org.cocos2dx.lib.** {
+    *;
+}
+
+-keepclasseswithmembers public class org.cocos2dx.plugin.** {
+    *;
+}
+
+-keepclassmembers public class com.chukong.cocosplay.client.** {
+    *;
+}
+
+# ADMOB
+-keep public class com.google.android.gms.ads.** {
+   public *;
+}
+
+-keep public class com.google.ads.** {
+   public *;
+}
+
+# GooglePlay IAP
+
+-keep class com.android.vending.billing.**
+
+
+# GooglePlayService
+
+-keep class * extends java.util.ListResourceBundle {
+    protected Object[][] getContents();
+}
+
+-keep public class com.google.android.gms.common.internal.safeparcel.SafeParcelable {
+    public static final *** NULL;
+}
+
+-keepnames @com.google.android.gms.common.annotation.KeepName class *
+-keepclassmembernames class * {
+    @com.google.android.gms.common.annotation.KeepName *;
+}
+
+-keepnames class * implements android.os.Parcelable {
+    public static final ** CREATOR;
+}
+
+-keep class com.chartboost.** { *; }
+
+-keep class twitter4j.** { *; }
+-dontwarn twitter4j.management.**
+-dontwarn twitter4j.**
+-dontwarn oauth.signpost.jetty.HttpRequestAdapter
+-dontwarn org.cocos2dx.plugin.TwitterApp
+-dontwarn oauth.signpost.signature.OAuthMessageSigner
+-dontwarn oauth.signpost.jetty.JettyOAuthConsumer
